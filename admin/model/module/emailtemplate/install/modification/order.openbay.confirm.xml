<file path="catalog/model/openbay/ebay_order.php" email_template="order.openbay.customer">
	<operation>
		<search index="0"><![CDATA[$subject = sprintf($language->get('text_new_subject'),]]></search>
		<add position="after"><![CDATA[
				$this->load->model('tool/image');
				$this->load->model('catalog/product');

				$file = DIR_SYSTEM . 'library/emailtemplate/email_template.php';

				if (file_exists($file)) {
					include_once($file);
				} else {
					trigger_error('Error: Could not load library ' . $file . '!');
					exit();
				}

	 			$template = new EmailTemplate($this->request, $this->registry);

				if (!empty($order_info['customer_group_id'])) {
	            	$this->load->model('account/customer_group');
					$template->data['customer_group'] = $this->model_account_customer_group->getCustomerGroup($order_info['customer_group_id']);
	            }

				if (!empty($order_info['affiliate_id'])) {
	            	$this->load->model('affiliate/affiliate');
					$template->data['affiliate'] = $this->model_affiliate_affiliate->getAffiliate($order_info['affiliate_id']);
	            }

				$template->addData($order_info);

				$template->data['text_new_comment'] = $language->get('text_new_comment');
				$template->data['text_affiliate'] = $language->get('text_affiliate');
				$template->data['text_customer_group'] = $language->get('text_customer_group');
				$template->data['text_id'] = $language->get('text_id');
				$template->data['text_order_link'] = $language->get('text_order_link');
				$template->data['text_sku'] = $language->get('text_sku');
				$template->data['text_stock_quantity'] = $language->get('text_stock_quantity');
				$template->data['text_backorder_quantity'] = $language->get('text_backorder_quantity');
				$template->data['text_invoice_no'] = $language->get('text_invoice_no');

				$template->data['new_order_status'] = $order_status;]]></add>
	</operation>
	<operation>
		<search><![CDATA[$text .= $comment]]></search>
		<add position="replace" trim="true"><![CDATA[$text .= strip_tags($comment)]]></add>
	</operation>
	<operation error="skip">
		<search index="0"><![CDATA[$this->db->query("INSERT INTO " . DB_PREFIX . "order_history SET]]></search>
		<add position="after"><![CDATA[
            $order_history_id = $this->db->getLastId();]]></add>
	</operation>
	<operation error="skip">
		<search index="0"><![CDATA[$order_option_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "order_option WHERE order_id = '" . (int)$order_id . "' AND order_product_id = '" . (int)$product['order_product_id'] . "'");]]></search>
		<add position="replace"><![CDATA[$product_data = $this->model_catalog_product->getProduct($product['product_id']);
		
		$order_option_query = $this->db->query("SELECT oo.*, pov.* FROM " . DB_PREFIX . "order_option oo LEFT JOIN " . DB_PREFIX . "product_option_value pov ON (pov.product_option_value_id = oo.product_option_value_id) WHERE oo.order_id = '" . (int)$order_id . "' AND oo.order_product_id = '" . (int)$product['order_product_id'] . "'");]]></add>
	</operation>
	<operation>
		<search index="0"><![CDATA['value' => (utf8_strlen($value) > 20) ? utf8_substr($value, 0, 20) . '..' : $value]]></search>
		<add position="replace"><![CDATA['price' => ((($this->config->get('config_customer_price') && $this->customer->isLogged()) || !$this->config->get('config_customer_price')) && (float)$option['price']) ? $this->currency->format($this->tax->calculate($option['price'], $product_data['tax_class_id'], $this->config->get('config_tax') ? 'P' : false)) : 0,
				            'price_prefix' => isset($option['price_prefix']) ? $option['price_prefix'] : '',
							'stock_quantity' => isset($option['quantity']) ? $option['quantity'] : '',
							'stock_subtract' => isset($option['subtract']) ? $option['subtract'] : '',
				            'value' => (utf8_strlen($value) > 120 ? utf8_substr($value, 0, 120) . '..' : $value)]]></add>
	</operation>
	<operation>
		<search index="0"><![CDATA[$template->data['products'][] = array(]]></search>
		<add position="replace"><![CDATA[if (isset($product_data['image'])) {
						$this->model_tool_image->setUrl($order_info['store_url']);

						$image = $this->model_tool_image->resize($product_data['image'], 50, 50);
					} else {
						$image = '';
					}

					$url = $this->url->link('product/product', 'product_id='.$product['product_id'], 'SSL');

					if ($this->config->get('config_stock_checkout') && $product_data['subtract']) {
						$stock_quantity = $product_data['quantity'] + $product['quantity']; // quantity before order
					} else {
						$stock_quantity = false;
					}

					if ($stock_quantity && $product['quantity'] > $stock_quantity) {
						$stock_backorder = $product['quantity'] - $stock_quantity;
					} else {
						$stock_backorder = false;
					}

					$template->data['products'][] = array(
						'product_id'       => $product_data['product_id'],
						'url'     		   => $url,
						'url_tracking' 	   => $template->getTracking($url),
						'image'     	   => $image,
						'weight'		   => ($product_data['weight'] > 0) ? $this->weight->format($product_data['weight'], $product_data['weight_class_id']) : 0,
						'description'      => utf8_substr(strip_tags(html_entity_decode($product_data['description'], ENT_QUOTES, 'UTF-8')), 0, 200) . '..',
						'manufacturer'     => $product_data['manufacturer'],
						'sku'              => $product_data['sku'],
						'stock_status'     => $product_data['stock_status'],
						'stock_subtract'   => $product_data['subtract'],
						'stock_quantity'   => $stock_quantity,
						'stock_backorder'  => $stock_backorder,]]></add>
	</operation>
	<operation>
		<search index="0,1"><![CDATA[$html = $template->fetch($this->config->get('config_template') . '/template/mail/order.tpl');]]></search>
		<add position="replace"><![CDATA[]]></add>
	</operation>
	<operation>
		<search index="0"><![CDATA[$html = $template->fetch('default/template/mail/order.tpl');]]></search>
		<add position="replace"><![CDATA[]]></add>
	</operation>
	<operation>
		<search index="0"><![CDATA[$mail->setHtml($html);]]></search>
		<add position="replace"><![CDATA[]]></add>
	</operation>
	<operation>
        <search index="1"><![CDATA[$mail->send();]]></search>
		<add position="replace"><![CDATA[
					$template->addData($data);

					if (!empty($data['link'])) {
		            	$template->data['link_tracking'] = $template->getTracking($data['link']);
		            }

		            if (!empty($data['download'])) {
						$template->data['download_tracking'] = $template->getTracking($data['download']);
					}

					$template->data['order_comment'] = nl2br($order_info['comment']);

					$template->data['comment'] = $comment;

					if ($comment && $notify && $order_info['comment'] != $comment) {
						$template->data['instruction'] = nl2br($comment);
					}

					$template->data['order_total'] = $this->currency->format($order_info['total'], $order_info['currency_code'], $order_info['currency_value']);

		   			$template_load = array(
						'key' => 'order.openbay.confirm'
					);

					if (!empty($order_status_id)) {
						$template_load['order_status_id'] = $order_status_id;
					}

					if (!empty($order_info['language_id'])) {
						$template_load['language_id'] = $order_info['language_id'];
					}

		   			$template->load($template_load);

			    	if ($template->data['emailtemplate']['attach_invoice']) {
			    		$this->load->model('module/pdf_invoice');

						if ($this->model_module_pdf_invoice) {
				    		$pdf_invoice = $this->model_module_pdf_invoice->getInvoice($order_info, true);

				    		if ($pdf_invoice && file_exists($pdf_invoice)) {
				    			$template->data['emailtemplate_invoice_pdf'] = $pdf_invoice;

				    			$mail->addAttachment($pdf_invoice);
				    		}
			    		}
			    	}

					$mail = $template->hook($mail);

					$mail->send();

					$template->sent();]]></add>
	</operation>
</file>